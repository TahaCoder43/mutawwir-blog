---
import Layout from "./Layout.astro";
import type { CollectionEntry } from "astro:content";

import BlogTitle from "../components/blog/BlogTitle.svelte";
import BlogBackground from "../components/blog/BlogBackground.svelte";
import InfoBar from "../components/blog/InfoBar.svelte";
import TableOfContent from "../components/blog/TableOfContent.svelte";
// import Author from "../components/blog/Author.svelte";

import "remark-github-alerts/styles/github-base.css";
import "remark-github-alerts/styles/github-colors-light.css";

interface Props {
    blog: CollectionEntry<"blog">;
}

const blog = Astro.props.blog;
const { title, alterH1Title, description, img, reasons, practicalSectionId, publishDate, dificulty } = blog.data;
const { headings } = await blog.render();
const backgroundScrollEffectLimit = 300;

const hasReasons = reasons !== undefined;
const hasImage = img !== undefined;
const hasAlterH1Title = alterH1Title !== undefined;
const isMediumTitle = title.length >= 30;
const isLongTitle = title.length >= 45;
---

<Layout {title} {description}>
    <Fragment slot="meta:og">
        <meta property="og:type" content="article" />
        {hasImage && <meta property="og:image" content={img.path} />}
        {hasImage && <meta name="twitter:image" content={img.path} />}
        <meta name="twitter:card" content="summary_large_image" />
    </Fragment>
    <article itemscope itemtype="https://schema.org/BlogPosting">
        <BlogBackground {img} scrollEffectLimit={backgroundScrollEffectLimit} client:load />
        <header>
            <BlogTitle {backgroundScrollEffectLimit} {isLongTitle} {isMediumTitle} {practicalSectionId} client:load>
                {hasAlterH1Title ? alterH1Title : title}
            </BlogTitle>
            <div id="wrap-heading-info">
                <h2 id={headings[0].text.toLowerCase()} class="introductory">{headings[0].text}</h2>
                <time datetime={publishDate.toISOString().split("T")[0] + "+05:00"} itemprop="datePublished">
                    {publishDate.toLocaleString("en-GB", { dateStyle: "medium" })}
                </time>
                <p id="dificulty" class={dificulty.toLowerCase()}>{dificulty}</p>
            </div>
        </header>
        <div id="content" itemprop="articleBody">
            <slot />
        </div>
        {hasReasons && <InfoBar {reasons} client:load />}
        <TableOfContent {headings} />
        <!-- <Author /> -->
    </article>
</Layout>

<style lang="scss" is:global>
    *::-webkit-scrollbar {
        height: 4px;
    }

    body {
        overflow-x: hidden;
    }

    body > article {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 100px;
        font-size: 1rem;
        --max-width: 800px;
        --paragraph-size: 1.3em;
        --heading-size: 2.8em;

        @media (max-width: 450px) {
            font-size: 0.85rem;
            --heading-size: 2.5em;
        }

        @media (max-width: 360px) {
            font-size: 0.8rem;
            --heading-size: 2em;
        }
    }

    header > div#wrap-heading-info {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        column-gap: 10px;

        max-width: var(--max-width);
        width: 90%;
        margin-inline: auto;
        font-size: var(--paragraph-size);

        > h2 {
            color: var(--high-contrast);
            font-family: Poppins, sans-serif;
            font-size: var(--heading-size);
            font-weight: 700;
            margin: 0 0 0 0;
        }

        > time {
            background-image: linear-gradient(to right, hsl(280, 80%, 80%), hsl(230, 80%, 80%));
            padding: 5px 10px;
            border-radius: 100px;
        }

        > #dificulty {
            padding: 5px 10px;
            border-radius: 100px;
            color: white;
            margin: 0;

            &.easy {
                background-color: #0f0b;
            }

            &.normal {
                background-color: #00fb;
            }

            &.hard {
                background-color: #f00b;
            }
        }
    }

    div#content {
        max-width: var(--max-width);
        width: 90%;

        font-size: var(--paragraph-size);
    }

    div#content section {
        &:first-child {
            > h2 {
                display: none;
            }
        }

        h2,
        h3 {
            font-weight: 700;
        }

        h2 {
            font-size: var(--heading-size);
            margin: 10px 0 15px 0;
            color: var(--high-contrast);
            font-family: Poppins, sans-serif;
        }

        h3 {
            font-size: calc(var(--heading-size) * 0.75);
            margin: 0 0 8px 0;
            color: var(--medium-contrast);
            font-family:
                Space Grotesk,
                sans-serif;
        }

        ol,
        ul {
            margin-block: 5px;
        }

        p,
        div.markdown-alert > p:not(.markdown-alert-title),
        ul > li,
        ol > li {
            color: var(--medium-contrast);
            > code {
                background-color: hsl(270, 100%, 85%);
                border-radius: 10px;
                padding-inline: 5px;
                font-size: 1rem;
            }
        }

        pre {
            padding: 10px;
            border-radius: 5px;
            font-size: 0.9rem;
            box-shadow: 2px 3px 8px 2px #0008;
        }

        img {
            width: 100%;
            height: auto;
            border-radius: 10px;
            transition:
                filter 0.3s,
                background-color 0.3s;

            &:hover {
                filter: brightness(0.8);
                background-color: rgb(0, 0, 0, 0.2); // for transparent images, as filter does not effect them
            }
        }

        img + em {
            display: block;
            text-align: center;
        }

        div.markdown-alert {
            padding-block: 20px;
            border-radius: 10px;

            &.markdown-alert-note {
                background-color: #0969da33;
            }

            &.markdown-alert-important {
                background-color: #8250df33;
            }

            &.markdown-alert-tip {
                background-color: #1a7f3733;
            }

            &.markdown-alert-warning {
                background-color: #9a670033;
            }

            &.markdown-alert-caution {
                background-color: #d1242f33;
            }
        }
    }
</style>
